<div class="row">
  <div class="col-md-12">
    <div class="card card-body text-center">
      <h6 class="font-weight-semibold mb-0 mt-1">Current Orders</h6>
      <div id="chart-orders"></div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="card card-body text-center">
      <h6 class="font-weight-semibold mb-0 mt-1">Orders trend, Last 10 days</h6>
      <div id="chart-orders-trend"></div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="card card-body text-center">
      <h6 class="font-weight-semibold mb-0 mt-1">User Signups, last 90 days</h6>
      <div id="chart-signup-trend"></div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="card card-body text-center">
      <h6 class="font-weight-semibold mb-0 mt-1">User Logins, last 90 days</h6>
      <div id="chart-login-trend"></div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="card card-body text-center">
      <h6 class="font-weight-semibold mb-0 mt-1">System Emails, last 90 days</h6>
      <div id="chart-email-trend"></div>
    </div>
  </div>
</div>
<div class="row">

  <div class="col-sm-12 col-xl-6">
    <div class="card">
      <div class="card-header bg-transparent header-elements-inline">
        <h6 class="card-title font-weight-semibold">
          <i class="icon-cart2 mr-2"></i>
          Upcoming Orders
        </h6>

        <div class="header-elements">
          <span class="text-muted">(Top 10)</span>
        </div>
      </div>

      <div class="list-group list-group-flush">
        <% @upcoming_orders.each do |order|%>
          <a href="<%= "/orders/show?key=#{order.key}" %>" class="list-group-item list-group-item-action">
          <div>
            <i class="icon-file-text2 mr-3"></i>
            <%= order.topic %>
            </div><br/>
            <div class="ml-auto">
              <span class="badge bg-success-400 ml-auto">Due date: <%= local_time(order.due_date) %></span>
            </div>
          </a>
        <% end %>
      </div>
    </div>
  </div>
</div>



<script>
    function orderStatusChart(){
      let chart = am4core.create("chart-orders", am4charts.PieChart);

      chart.data = [{
          "status": "To Do",
          "value": <%= @todo_orders_count %>
      }, {
          "status": "In Progress",
          "value": <%= @in_progress_orders_count %>
      }, {
          "status": "Complete",
          "value": <%= @complete_orders_count %>
      }];

      chart.innerRadius = am4core.percent(50);
      chart.startAngle = 180;
      chart.endAngle = 360;
      chart.radius = am4core.percent(70);
      

      let series = chart.series.push(new am4charts.PieSeries());
      series.dataFields.value = "value";
      series.dataFields.category = "status";

      series.colors.list = [
              am4core.color("#03adfc"),
              am4core.color("#fc0303"),
              am4core.color("#24fc03")
            ];

      series.slices.template.cornerRadius = 10;
      series.slices.template.innerCornerRadius = 7;

     
      let fillModifier = new am4core.RadialGradientModifier();
      fillModifier.brightnesses.push(-0.2, -0.2, 0, -0.3);
      series.slices.template.fillModifier = fillModifier;

      // this creates initial animation
      series.hiddenState.properties.opacity = 1;
      series.hiddenState.properties.endAngle = -90;
      series.hiddenState.properties.startAngle = -90;


      chart.legend = new am4charts.Legend();
    }

    function userSignupTrendsChart(){
      var chart = am4core.create("chart-signup-trend", am4charts.XYChart);
      chart.paddingRight = 20;
      chart.colors.list = [
        am4core.color("#24fc03")
      ];

      //Generate data
      let chartData = []

      <% @user_signup_data.each do |data| %>
        chartData.push({
          date: new Date("<%= data["date"]%>"),
          signup: <%= data["signup"]%>
        });
      <% end %>

      chart.data = chartData;

      // Create axes
      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
      dateAxis.renderer.minGridDistance = 50;

      chart = createAxisAndSeries(chart, "signup", "Signups", false, 0.3, false);

      // Add legend
      chart.legend = new am4charts.Legend();

      // Add cursor
      chart.cursor = new am4charts.XYCursor();
    }

    function userLoginTrendsChart(){
      var chart = am4core.create("chart-login-trend", am4charts.XYChart);
      chart.paddingRight = 20;
      chart.colors.list = [
        am4core.color("#03adfc")
      ];

      //Generate data
      let chartData = []

      <% @user_login_data.each do |data| %>
        chartData.push({
          date: new Date("<%= data["date"]%>"),
          login: <%= data["login"]%>
        });
      <% end %>

      chart.data = chartData;

      // Create axes
      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
      dateAxis.renderer.minGridDistance = 50;

      chart = createAxisAndSeries(chart, "login", "Logins", false, 0.3, false);
      
      // Add legend
      chart.legend = new am4charts.Legend();

      // Add cursor
      chart.cursor = new am4charts.XYCursor();
    }

    function systemEmailTrendsChart(){
      var chart = am4core.create("chart-email-trend", am4charts.XYChart);
      chart.paddingRight = 20;
      chart.colors.list = [
        am4core.color("#fc0303")
      ];

      //Generate data
      let chartData = []

      <% @system_emails_data.each do |data| %>
        chartData.push({
          date: new Date("<%= data["date"]%>"),
          email: <%= data["email"]%>
        });
      <% end %>

      chart.data = chartData;

      // Create axes
      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
      dateAxis.renderer.minGridDistance = 50;

      chart = createAxisAndSeries(chart, "email", "Emails", false, 0.3, false);
      
      // Add legend
      chart.legend = new am4charts.Legend();

      // Add cursor
      chart.cursor = new am4charts.XYCursor();
    }

    function allOrderTrendsChart(){
      var chart = am4core.create("chart-orders-trend", am4charts.XYChart);
      chart.paddingRight = 20;
      chart.colors.list = [
        am4core.color("#fc0303"),
        am4core.color("#03adfc"),
        am4core.color("#24fc03"),
        am4core.color("#fcc603")
      ];

      //Generate data
      let chartData = []

      <% @all_order_data.each do |data| %>
        chartData.push({
          date: new Date("<%= data["date"]%>"),
          created: <%= data["created"]%>,
          paid: <%= data["paid"]%>,
          completed: <%= data["completed"]%>,
          closed: <%= data["closed"]%>
        });
      <% end %>

      chart.data = chartData;

      // Create axes
      var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
      dateAxis.renderer.minGridDistance = 50;

      chart = createAxisAndSeries(chart, "created", "Created", false, 0, true);
      chart = createAxisAndSeries(chart, "paid", "Paid", false, 0, true);
      chart = createAxisAndSeries(chart, "completed", "Completed", true, 0, true);
      chart = createAxisAndSeries(chart, "closed", "Closed", true, 0, true);

      // Add legend
      chart.legend = new am4charts.Legend();

      // Add cursor
      chart.cursor = new am4charts.XYCursor();
    }

    function createAxisAndSeries(chart, field, name, opposite, fillOpacity, useBullet) {
      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

      if(chart.yAxes.indexOf(valueAxis) != 0){
        valueAxis.syncWithAxis = chart.yAxes.getIndex(0);
      }
      
      var series = chart.series.push(new am4charts.LineSeries());
      series.dataFields.valueY = field;
      series.dataFields.dateX = "date";
      series.strokeWidth = 3;
      series.yAxis = valueAxis;
      series.name = name;
      series.tooltipText = "{name}: [bold]{valueY}[/]";
      series.tensionX = 0.8;
      series.showOnInit = true;
      series.fillOpacity = fillOpacity;
      
      var interfaceColors = new am4core.InterfaceColorSet();
      
      if(useBullet){
        var bullet = series.bullets.push(new am4charts.CircleBullet());
        bullet.circle.strokeWidth = 2;
        bullet.circle.radius = 4;
        bullet.circle.fill = am4core.color("#fff");

        let bullethover = bullet.states.create("hover");
        bullethover.properties.scale = 1.3;
      }
      
      valueAxis.renderer.line.strokeOpacity = 1;
      valueAxis.renderer.line.strokeWidth = 2;
      valueAxis.renderer.line.stroke = series.stroke;
      valueAxis.renderer.labels.template.fill = series.stroke;
      valueAxis.renderer.opposite = opposite;
      return chart;
    }

    $(document).ready(function () {
     orderStatusChart();
     allOrderTrendsChart();
     userSignupTrendsChart();
     userLoginTrendsChart();
     systemEmailTrendsChart();
    });
</script>